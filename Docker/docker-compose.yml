version: "3.8"

services:
  # Chat application
  chat-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: chat-app
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-chatapp}
      - DB_USER=${DB_USER:-chatadmin}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - app-data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx for WebSocket proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: chat-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - chat-app
    networks:
      - chat-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # PostgreSQL database
  postgres:
    image: postgres:13
    container_name: chat-postgres
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME:-chatapp}
      - POSTGRES_USER=${DB_USER:-chatadmin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - chat-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-chatadmin} -d ${DB_NAME:-chatapp}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis for message broker and caching
  redis:
    image: redis:6-alpine
    container_name: chat-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  app-data:
  postgres-data:
  redis-data:

networks:
  chat-network:
    driver: bridge
